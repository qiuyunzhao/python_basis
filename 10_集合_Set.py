# 集合（set）
#     - 集合和列表非常相似
#     - 不同点：
#         1.列表存储任意对象  集合中只能存储不可变对象
#         2.列表是有序的      集合是无序（不是按照元素的插入顺序保存）
#         3.列表中元素可重复  集合中元素不可重复

print('------------------------------------------------------------------------------------------------------1.创建集合')
# {} 创建
# s = {}  # 创建的是空字典而不是集合
# print(s, type(s))
s = {'a', 'b', 1, 2, 3, 1}
print(s, type(s))

# set() 函数创建
s = set()  # 空集合
print(s, type(s))

s = set([1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 5])  # 列表->集合
print(s, type(s))

s = set('hello')  # 字符串->集合
print(s, type(s))

s = set({'a': 1, 'b': 2, 'c': 3})  # 字典->集合 （集合中只会包含字典中的键）
print(s, type(s))

# s = {[1, 2, 3], [4, 6, 7]}  # TypeError: unhashable type: 'list' 只能存储不可变对象

print('-----------------------------------------------------------------------------------------------------------2.增')
s = {'a', 'b', 1, 2, 3, 1}
s.add(10)
print(s)

print('-----------------------------------------------------------------------------------------------------------3.删')
s = {1, 2, 3, 4, 5, 6}

# pop()     随机删除并返回一个集合中的元素
result = s.pop()
print('result =', result, 's=', s)

# remove()  删除集合中的指定元素
s.remove(4)
print(s)

# clear()   清空集合
s.clear()

print('-----------------------------------------------------------------------------------------------------------4.改')
s = {1, 2}

# update() 将一个集合中的元素添加到当前集合中，可以传递序列或字典作为参数，字典只会使用键
s.update(['小红', '小明'])  # 列表
print(s)

s.update((10, 20))  # 元组
print(s)

s2 = set('hi')  # 字符串
s.update(s2)
print(s)

s.update({'孙悟空': 'cd', '唐僧': 'ef'})  # 字典
print(s)

print('-----------------------------------------------------------------------------------------------------------5.查')
s = {'a', 'b', 1, 2, 3, 1}
# in和not in来检查集合中的元素
print('c' in s)

print('------------------------------------------------------------------------------------------------------6.获取大小')
s = {'a', 'b', 1, 2, 3, 1}
print(len(s))

print('---------------------------------------------------------------------------------------------------------7.复制')
s = {'a', 'b', 1, 2, 3, 1}
# copy()对集合进行浅复制
s1 = s.copy()
print(s, id(s))
print(s1, id(s1))

print('------------------------------------------------------------------------------------------------------8.集合运算')
# 在对集合做运算时，不会影响原来的集合，而是返回一个运算结果
# 创建两个集合
s = {1, 2, 3, 4, 5}
s2 = {3, 4, 5, 6, 7}

# & 交集运算
result = s & s2  # {3, 4, 5}
print('& 交集运算', result)

# | 并集运算
result = s | s2  # {1,2,3,4,5,6,7}
print('| 并集运算', result)

# - 差集 (s中有s2中没有)
result = s - s2  # {1, 2}
print('- 差集', result)

# ^ 异或集 (只在s中有 或 只在s2中有)
result = s ^ s2  # {1, 2, 6, 7}
print('^ 异或集', result)

# <= 检查一个集合是否是另一个集合的子集
result = {1, 2, 3} <= {1, 2, 3, 4, 5}  # False
print('<= 子集', result)

# < 检查一个集合是否是另一个集合的真子集
result = {1, 2, 3} < {1, 2, 3}  # False
result = {1, 2, 3} < {1, 2, 3, 4, 5}  # True
print('< 真子集', result)

# >= 检查一个集合是否是另一个的超集
result = {1, 2, 3} >= {1, 2, 3}  # True
print('>= 超集', result)

# > 检查一个集合是否是另一个的真超集
result = {1, 2, 3, 4, 5} > {1, 2, 3}  # True
print('> 真超集', result)
